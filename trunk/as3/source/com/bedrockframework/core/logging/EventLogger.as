package com.bedrockframework.core.logging{	import com.bedrockframework.core.dispatcher.BedrockDispatcher;	import com.bedrockframework.core.event.LogEvent;	import flash.utils.Dictionary;	public class EventLogger implements ILogger	{		private var _categoryDictionary:Dictionary;				public function EventLogger()		{			this.createCategoryLabels();		}				private function createCategoryLabels():void		{			this._categoryDictionary = new Dictionary;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.CONSTRUCTOR;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.DEBUG;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.ERROR;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.FATAL;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.INFO;			this._categoryDictionary[LogLevel.CONSTRUCTOR.toString()] = LogEvent.WARNING;		}						public function log($target:*, $category:int, $message:String):void		{			BedrockDispatcher.dispatchEvent(new LogEvent(this._categoryDictionary[$category.toString()], $target, {message:$message}));		}			}}
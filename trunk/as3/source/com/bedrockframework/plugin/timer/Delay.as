package com.bedrockframework.plugin.timer{	/*	imports	*/	import flash.display.Sprite;	import com.bedrockframework.core.base.DispatcherWidget;	import com.bedrockframework.plugin.event.DelayEvent;	import flash.utils.*;	/*	class	*/	public class Delay extends DispatcherWidget	{		/*		Variables		*/		private var _numMilliseconds:Number;		private var _numSeconds:Number;		private var _numIntervalID:uint;		private var _bolRunning:Boolean;		/*		Constructor		*/		public function Delay($time:Number = 0.5):void		{			this._numSeconds = $time;			this._bolRunning = false;		}		/*		public functions		*/		public function start($delay:Number):void		{			if (!this._bolRunning) {				this.status("Start");				this._numSeconds = $delay;				this._numMilliseconds = $delay * 1000;				this._numIntervalID = setTimeout(this.trigger, this._numMilliseconds);				this._bolRunning = true;				this.dispatchEvent(new DelayEvent(DelayEvent.START, this, {seconds:this._numSeconds, milliseconds:this._numMilliseconds}));			}		}		public function stop():void		{			if (this._bolRunning) {				this.status("Stop");				this._bolRunning = false;				clearTimeout(this._numIntervalID);				this.dispatchEvent(new DelayEvent(DelayEvent.STOP, this,{seconds:this._numSeconds, milliseconds:this._numMilliseconds}));			}		}		public function trigger():void		{			this._bolRunning = false;			this.dispatchEvent(new DelayEvent(DelayEvent.TRIGGER, this));		}		/*		Property Definitions		*/		public function get seconds():Number		{			return this._numSeconds;		}		public function get milliseconds():Number		{			return this._numMilliseconds / 1000;		}		public function get running():Boolean		{			return this._bolRunning;		}	}}
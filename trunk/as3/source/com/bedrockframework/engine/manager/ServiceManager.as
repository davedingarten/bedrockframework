package com.bedrockframework.engine.manager{	import com.bedrockframework.core.base.StaticWidget;	import com.bedrockframework.core.logging.LogLevel;	import com.bedrockframework.core.logging.Logger;	import com.bedrockframework.engine.remoting.Service;	import com.bedrockframework.plugin.storage.HashMap;		public class ServiceManager extends StaticWidget	{		/*		* Variable Declarations		*/		private static var __objServices:HashMap = new HashMap();		/*		* Constructor		*/		Logger.log(ServiceManager, LogLevel.CONSTRUCTOR, "Constructed");		/*		Create a new remoting service.		*/		public static function addService($alias:String, $service:Service):void		{			ServiceManager.__objServices.saveValue($alias, $service);		}		/*		Create a new remoting service.		*/		public static function createService($params:Object):void		{			var objParams:Object = $params;			try {				var objService:Service = new Service(objParams.gateway, objParams.path);				ServiceManager.addService(objParams.alias, objService);			}catch($error:Error){				Logger.error(ServiceManager, "Missing Parameters!");			}					}		/*		Create a several new remoting services.		*/		public static function createServices($services:Array):void		{			var arrServices:Array = $services;			var numLength:Number = arrServices.length;			for (var i:Number = 0; i < numLength; i++) {				ServiceManager.createService(arrServices[i]);			}		}		/*		Get a new remoting service.		*/		public static function getService($alias:String):Service		{						return ServiceManager.__objServices.getValue($alias);		}	}}
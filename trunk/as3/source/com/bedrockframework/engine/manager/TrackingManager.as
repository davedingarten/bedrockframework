package com.bedrockframework.engine.manager{	import com.bedrockframework.core.base.StaticWidget;	import com.bedrockframework.core.logging.LogLevel;	import com.bedrockframework.core.logging.Logger;	import com.bedrockframework.engine.tracking.ITrackingService;	import com.bedrockframework.plugin.event.DelayEvent;	import com.bedrockframework.plugin.storage.HashMap;	import com.bedrockframework.plugin.timer.Delay;	public class TrackingManager extends StaticWidget	{		/*		Variable Declarations		*/		private static  var BOL_TRACKING:Boolean = true;		private static var _OBJ_TRACK_DELAY:Delay;		private static var _OBJ_SERVICES:HashMap;		private static  var ARR_QUEUE:Array;				Logger.log(TrackingManager, LogLevel.CONSTRUCTOR, "Constructed");		/*		Initialize		*/		public static function initialize():void		{			TrackingManager._OBJ_SERVICES = new HashMap();			TrackingManager.ARR_QUEUE = new Array();			TrackingManager._OBJ_TRACK_DELAY = new Delay("Track");			TrackingManager._OBJ_TRACK_DELAY.addEventListener(DelayEvent.TRIGGER, TrackingManager.onTrack);			TrackingManager._OBJ_TRACK_DELAY.silenceLogging = true;		}		/*		Run Tracking		*/		public static function track($name:String, ...$arguments):void		{			if (TrackingManager.enabled) {				var objService:Object = TrackingManager.getService($name);				if (objService) {					TrackingManager.addToQueue($name, $arguments);				}				TrackingManager.startDelay();			}		}		private static function execute($name:String, $arguments:Array):void		{			var objService:Object = TrackingManager.getService($name);			if (objService) {				objService.track.apply(objService, $arguments);			}		}		private static function startDelay():void		{			if (TrackingManager.ARR_QUEUE.length > 0) {				if (!TrackingManager._OBJ_TRACK_DELAY.running) {					TrackingManager._OBJ_TRACK_DELAY.start(0.5);				}			}		}		/*		Add/ Get Services		*/		public static function addService($name:String, $service:ITrackingService):void		{			TrackingManager._OBJ_SERVICES.saveValue($name, $service);		}		public static function getService($name:String):Object		{			return TrackingManager._OBJ_SERVICES.getValue($name);		}		/*		Queue Functions 		*/		private static function addToQueue($name:String, $arguments:Array):void		{			TrackingManager.ARR_QUEUE.push({name:$name, arguments:$arguments});		}		private static function getNextQueueItem():Object		{			return TrackingManager.ARR_QUEUE.shift();		}		/*		Event Handlers		*/		private static function onTrack($event:DelayEvent):void		{			var objTrack:Object = TrackingManager.getNextQueueItem();			if (objTrack != null) {				TrackingManager.execute(objTrack.name, objTrack.arguments);			}			TrackingManager.startDelay()		}		/*		Property Definitions		*/		public static function set enabled($status:Boolean):void		{			Logger.status(TrackingManager, "Track status set to - " + $status)			TrackingManager.BOL_TRACKING = $status;		}		public static function get enabled():Boolean		{			return TrackingManager.BOL_TRACKING;		}	}}
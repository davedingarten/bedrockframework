package com.bedrockframework.engine.manager{	import com.bedrockframework.core.base.StaticWidget;	import com.bedrockframework.core.logging.LogLevel;	import com.bedrockframework.core.logging.Logger;	import com.bedrockframework.plugin.tracking.ITrackingService;	import com.bedrockframework.plugin.event.DelayEvent;	import com.bedrockframework.plugin.storage.HashMap;	import com.bedrockframework.plugin.timer.Delay;	public class TrackingManager extends StaticWidget	{		/*		* Variable Declarations		*/		private static var __bolTracking:Boolean = true;		private static var __objTrackDelay:Delay;		private static var __objServiceMap:HashMap;		private static var __arrQueue:Array;		/*		* Constructor		*/		Logger.log(TrackingManager, LogLevel.CONSTRUCTOR, "Constructed");		/*		Initialize		*/		public static function initialize($enabled:Boolean = true):void		{			TrackingManager.enabled = $enabled;			TrackingManager.__objServiceMap = new HashMap();			TrackingManager.__arrQueue = new Array;			TrackingManager.__objTrackDelay = new Delay;			TrackingManager.__objTrackDelay.addEventListener(DelayEvent.TRIGGER, TrackingManager.onTrack);			TrackingManager.__objTrackDelay.silenceLogging = true;		}		/*		Run Tracking		*/		public static function track($name:String, $details:Object):void		{			if (TrackingManager.enabled) {				var objService:Object = TrackingManager.getService($name);				if (objService) {					TrackingManager.addToQueue($name, $details);				}				TrackingManager.startDelay();			}		}		private static function execute($name:String, $details:Object):void		{			var objService:Object = TrackingManager.getService($name);			if (objService) {				objService.track($details);			}		}		private static function startDelay():void		{			if (TrackingManager.__arrQueue.length > 0) {				if (!TrackingManager.__objTrackDelay.running) {					TrackingManager.__objTrackDelay.start(0.5);				}			}		}		/*		Add/ Get Services		*/		public static function addService($name:String, $service:ITrackingService):void		{			TrackingManager.__objServiceMap.saveValue($name, $service);		}		public static function getService($name:String):Object		{			return TrackingManager.__objServiceMap.getValue($name);		}		/*		Queue Functions 		*/		private static function addToQueue($name:String, $details:Object):void		{			TrackingManager.__arrQueue.push({name:$name, details:$details});		}		private static function getNextQueueItem():Object		{			return TrackingManager.__arrQueue.shift();		}		/*		Event Handlers		*/		private static function onTrack($event:DelayEvent):void		{			var objDetails:Object = TrackingManager.getNextQueueItem();			if (objDetails != null) {				TrackingManager.execute(objDetails.name, objDetails.details);			}			TrackingManager.startDelay()		}		/*		Property Definitions		*/		public static function set enabled($status:Boolean):void		{			Logger.status(TrackingManager, "Track status set to - " + $status)			TrackingManager.__bolTracking = $status;		}		public static function get enabled():Boolean		{			return TrackingManager.__bolTracking;		}	}}
import mx.events.EventDispatcher;import com.bedrockframework.core.event.GenericEvent;class com.bedrockframework.core.dispatcher.BedrockDispatcher{	/*	Variable Decarations	*/	private static var __bolInitialized:Boolean;	private static var __objDispatcher:Object;	/*	Constructor	*/	public static function initialize():Void	{		if (!BedrockDispatcher.__bolInitialized) {			trace("[BedrockDispatcher] : Initialized");			BedrockDispatcher.__objDispatcher = new Object();			EventDispatcher.initialize(BedrockDispatcher.__objDispatcher);			BedrockDispatcher.__bolInitialized = true;		}	}	public static function dispatchEvent($event:GenericEvent):Void	{		if (BedrockDispatcher.__bolInitialized) {			BedrockDispatcher.__objDispatcher.dispatchEvent($event);		} else {			trace("[BedrockDispatcher] [Error] : Dispatcher has not been initialized!");		}	}	public static function addEventListener($event:String, $handler:Function):Void	{		if (BedrockDispatcher.__bolInitialized) {			BedrockDispatcher.__objDispatcher.addEventListener($event,$handler);		} else {			trace("[BedrockDispatcher] [Error] : Dispatcher has not been initialized!");		}	}	public static function removeEventListener($event:String, $handler:Function):Void	{		if (BedrockDispatcher.__bolInitialized) {			BedrockDispatcher.__objDispatcher.removeEventListener($event,$handler);		} else {			trace("[BedrockDispatcher] [Error] : Dispatcher has not been initialized!");		}	}		}
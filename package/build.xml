<?xml version="1.0" encoding="utf-8"?>
<project name="Bedrock" default="compile" basedir=".">
	
	<description>Build File for the Bedrock Framework</description>
	
	<property file="build.properties" description="defines all of the values for this build" />
	
	<target name="setupExcludes" description="double check system level tools">
		<defaultexcludes add="${exclude.debug}"/>
		<defaultexcludes add="${exclude.actionscript}"/>
		<defaultexcludes add="${exclude.project}"/>
		<defaultexcludes add="${exclude.prefs}"/>
	</target>

	
	<target name="compile" depends="setupExcludes">
		<antcall target="checkProperties"/>
		<antcall target="initialize"/>
		
		<antcall target="cleanDirectories"/>
		<antcall target="createDirectories"/>
		<antcall target="generateDocumentation"/>
		<!--
		<antcall target="generateSWC"/>
		<antcall target="generateSWF"/>
		-->
		<antcall target="packageAll"/>
		<antcall target="createTag"/>
	</target>
	
	<target name="initialize" description="Initializes the build" >
		<tstamp/>
		<echo message="-----------------------------------------------------------------------------"/>
		<echo message=" "/>
		<echo message="${project.fullname}  ${project.version} ${TODAY}"/>
		<echo message="Copyright (c) ${project.year} ${project.owner}"/>
		<echo message="Author: ${project.author}" />
		<echo message=" "/>
		<echo message="-----------------------------------------------------------------------------"/>
	</target>
	
	
	
	<target name="checkProperties" description="double check system level tools">
		<fail unless="asdoc.exe">The "asdoc.exe" property must be set in build.properties.</fail>
		<fail unless="compc.exe">The "compc.exe" property must be set in build.properties.</fail>
		<fail unless="mxmlc.exe">The "mxmlc.exe" property must be set in build.properties.</fail>
	</target>
	

	<target name="cleanDirectories" description="remove all directories">
		<delete includeemptydirs="true">
			<fileset dir="${docs.dir}" includes="**/*"/>
		</delete>
	</target>
	
	<target name="createDirectories" description="remove all directories">
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${binary.dir}" />
		<mkdir dir="${deploy.dir}" />
	</target>
	
	
	<target name="generateDocumentation"  description="Generates the asdoc of the source files">

		<exec executable="${asdoc.exe}" failonerror="false">
			<!-- Include all of the classes in the "source" tree -->
			<arg line="-doc-sources ${base.dir}/${root.dir}/${source.dir}"/>
			
			<arg value="-window-title" />
            <arg value="'${project.fullname}'"/>
			
			<arg value="-output" />
            <arg value="${docs.dir}"/>
			
			<arg value="-main-title" />
            <arg value="${docs.docsname}"/>
			
			<arg value="-footer" />
            <arg value="${project.copyright}"/>
			
			<arg value="-left-frameset-width" />
            <arg value="300"/>
			
			<arg value="-show-binding-warnings=false" />
			<arg value="-show-actionscript-warnings=false" />
			<arg value="-strict=false" />
			
			<arg value="-templates-path" />
			<arg value="${docs.template}"/>
						
			<arg value="-exclude-classes" />
			<arg value="com.asual.swfaddress.SWFAddress"/>
			<arg value="com.asual.swfaddress.SWFAddressEvent"/>
			<arg value="--" />
						
		</exec>
		
	</target>
	
	<!--
	
	Binary Creator
		
 	-->
	
	<target name="generateSWC" description="Compiles all of the classes into an .swc file">
	
		<exec executable="${compc.exe}" dir=".">
			<!-- Specify the name of the output file -->
			<arg line="-output" />
			<arg value="${binary.dir}/${project.deployname}.swc"/>
			
			<arg value="-source-path" />
			<arg value="${source.dir}"/>
			
			<arg value="-include-classes" />
			<arg value="${source.dir}"/>
			
			<arg value="-show-binding-warnings=false" />
			<arg value="-show-actionscript-warnings=false" />
			<arg value="-strict=false" />
		</exec>
		
	</target>
	
	
	<target name="generateSWF" description="comiles all of the classes into an .swf file">
		<exec executable="${mxmlc.exe}" dir=".">
			<!-- Specify the name of the output file -->
			<arg line="-output" />
			<arg value="${binary.dir}/${project.deployname}.swf"/>
			
			<arg value="-source-path" />
			<arg value="${source.dir}"/>
			
			<arg value="-show-binding-warnings=false" />
			<arg value="-show-actionscript-warnings=false" />
			<arg value="-strict=false" />
		</exec>
	</target>
	
	<target name="createTag" description="Create a branch and tag is with the version number.">
		<copy todir="${base.dir}/${tags.dir}/${project.deployname}/"  includeEmptyDirs="true">
			<fileset dir="${base.dir}/${root.dir}" excludes="${exclude.debug}, ${exclude.prefs}, ${exclude.actionscript}, ${exclude.project}"/>
		</copy>
		<copy todir="${base.dir}/${tags.dir}/${project.deployname}/${docs.dir}/">
			<fileset dir="${docs.dir}"/>
		</copy>
	</target>
	
	<!--
	
	Zip Packaging
		
 	-->
	<target name="packageAll" description="Packages the source">
		<zip destfile="${deploy.dir}/${project.deployname}.zip">
			<fileset dir="${base.dir}/${root.dir}">
				<exclude name ="${exclude.debug}"/>
				<exclude name ="${exclude.prefs}"/>
				<exclude name ="${exclude.actionscript}"/>
				<exclude name ="${exclude.project}"/>
			</fileset>
			<zipfileset dir="${docs.dir}" prefix="docs"/>
		</zip>
	</target>
	
	<target name="packageBinary" description="Packages the binary">
		<zip 
			basedir="${binary.dir}"
			includes="**/*.*"
			destfile="${deploy.dir}/${project.deployname}-bin.zip" />
	</target>
		
	<target name="packageDocs" description="Packages the docs">
		<zip 
			basedir="${docs.dir}"
			includes="**/**" 
			destfile="${deploy.dir}/${project.deployname}-docs.zip" />
	</target>
	
</project>
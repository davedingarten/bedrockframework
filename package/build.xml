<?xml version="1.0" encoding="utf-8"?>
<project name="Bedrock" default="build-all" basedir=".">
	
	<description>Build File for the Madagascar Framework</description>
	
	<property file="build.properties" description="defines all of the values for this build" />

	<target name="build-all" depends="destroy, create, lib, docs, package-source, package-binary, package-docs" />
	
	<target name="init" description="Initializes the build" >
		<tstamp/>
		<echo message="============================================="/>
		<echo message="${project.name}-${project.version} [${TODAY}]"/>
		<echo message="Copyright (c) ${project.year} ${project.owner}"/>
		<echo message="OS : ${os.name}" />
		<echo message="Author: ${author}" />
		<echo message="=============================================="/>
	</target>
	
	<target name="properties" depends="init" description="double check system level tools">
		<fail unless="asdoc.exe">The "asdoc.exe" property must be set in build.properties.</fail>
		<fail unless="compc.exe">The "compc.exe" property must be set in build.properties.</fail>
		<fail unless="mxmlc.exe">The "mxmlc.exe" property must be set in build.properties.</fail>
	</target>
	

	<target name="clean" depends="properties" description="clean all generated files">
		<delete includeemptydirs="true">
			<fileset dir="${docs.dir}" includes="**/*"/>
			<fileset dir="${bin.dir}" includes="**/*" />
			<fileset dir="${deploy.dir}" includes="**/*" />
		</delete>		
	</target>  
	
	<target name="destroy" description="remove all directories">
		<delete dir="${docs.dir}" />
		<delete dir="${bin.dir}" />
		<delete dir="${deploy.dir}" />
	</target>
	
	<target name="create" depends="destroy" description="remove all directories">
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${deploy.dir}" />
	</target>
	
	<target name="manifest" description="Creates the manifest file">
		<java jar="${manifest.writer}" fork="true"  >
			<arg value="${src.dir} ${src.dir}/manifest.xml"/>
		</java>
	</target>

	
	<target name="lib" description="Compiles all of the classes into an .swc file">
		
		<mkdir dir="${bin.dir}" />
		<exec executable="${compc.exe}" dir=".">
			<!-- Specify the name of the output file -->
			<arg line="-o '${bin.dir}/${project.name}-${project.version}.swc'
					-sp '${src.dir}'
					-is '${src.dir}'
					-show-binding-warnings=false
					-show-actionscript-warnings=false
					-namespace http://www.autumntactics.com ${src.dir}/manifest.xml
					-strict=false"/>
		</exec>
		
	</target>
	
	<target name="lib_bak" depends="manifest" description="comiles all of the classes into an .swf file">
			
			<mkdir dir="${bin.dir}" />
			<exec executable="${mxmlc.exe}" dir=".">
				<!-- Specify the name of the output file -->
				<arg line="-o '${bin.dir}/${project.name}-${project.version}.swf'
						-sp '${src.dir}'
						-show-binding-warnings=false
						-show-actionscript-warnings=false
						-strict=false"/>
			</exec>
		</target>
		
	
	<target name="docs"  description="Generates the asdoc of the source files">
		<mkdir dir="${docs.asdoc.dir}" />
		<exec executable="${asdoc.exe}" failonerror="false">
			<!-- Include all of the classes in the "src" tree -->
			<arg line="-doc-sources 'source'" />
			
			<arg line="-source-path+='source'
			                -window-title '${project.fullname}'
			                -output '${docs.asdoc.dir}'
			                -main-title '${asdoc.docsname}'
			                -footer 'Copyright 2008 AutumnTactics. All Rights Reserved.'
			                -show-binding-warnings=false
			                -show-actionscript-warnings=false
				
				-strict=false
							"/>
		
			
		</exec>
		
	</target>
 
	<target name="package-source" description="Packages the source">
		<mkdir dir="${deploy.dir}"/>
		<zip 
			basedir="."
			includes="source/**/**, template/**/**, samples/**/**, docs/**/**"
			excludes="source/manifest.xml"
			destfile="${deploy.dir}/${project.name}-${project.version}-src.zip" />
	</target>
		
	<target name="package-binary" description="Packages the binary">
		<mkdir dir="${deploy.dir}"/>
		<zip 
			basedir="${bin.dir}"
			includes="**/*.*"
			destfile="${deploy.dir}/${project.name}-${project.version}-bin.zip" />
	</target>
		
	<target name="package-docs" description="Packages the docs">
		<mkdir dir="${deploy.dir}"/>
		<zip 
			basedir="${docs.asdoc.dir}"
			includes="**/**" 
			destfile="${deploy.dir}/${project.name}-${project.version}-doc.zip" />
	</target>
</project>